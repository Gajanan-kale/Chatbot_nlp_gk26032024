# .github/workflows/deploy.yml

name: Deploy Django to EC2

on:
  push:
    branches:
      - main  # or the branch you want to deploy from

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        
        #pip install -r requirements.txt

    - name: Deploy to EC2
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC_SSH_KEY }}
        EC2_HOST: ${{ secrets.EC_HOST }}
        EC2_USER: ${{ secrets.EC_USERNAME }} # or the user for your EC2 instance
      run: |
        sudo apt-get update
        sudo apt install git
        #sudo apt-get install openssh-client -y

        # Add SSH key
        #mkdir -p ~/.ssh
        #echo "$EC_SSH_KEY" > ~/.ssh/id_rsa
        #chmod 600 ~/.ssh/id_rsa

        # Add EC2 to known hosts
        #ssh-keyscan -H $EC_HOST >> ~/.ssh/known_hosts

        # SSH into the EC2 instance and pull the latest code
        #ssh $EC_USERNAME@$EC_HOST << 'EOF'
        # Check if the project directory exists, if not, create it
        if [ ! -d "~/mlprodeploy" ]; then
          mkdir -p ~/mlprodeploy
        fi
        cd mlprodeploy
        # Remove existing virtual environment if it exists
        if [ -d "mlenv" ]; then
          rm -rf mlenv
        fi
        # Create a new virtual environment and activate it
        python3 -m venv mlenv
        git init
        git pull https://github.com/Gajanan-kale/Chatbot_nlp_gk26032024.git
        source mlenv/bin/activate
        cd Chatbot_nlp_gk26032024
        cd chatbot_project
        pip install -r requirements.txt
        python manage.py migrate
        python manage.py collectstatic --noinput
        sudo systemctl restart gunicorn
        EOF
          
          
      
          

          
